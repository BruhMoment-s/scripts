-- Gui to Lua
-- Version: 3.2

-- Instances:

local obfuscator2 = Instance.new("ScreenGui")
local dragimanburhmomento = Instance.new("ImageLabel")
local Frame = Instance.new("ImageLabel")
local EditorFrame = Instance.new("ScrollingFrame")
local Source = Instance.new("TextBox")
local Comments_ = Instance.new("TextLabel")
local Globals_ = Instance.new("TextLabel")
local Keywords_ = Instance.new("TextLabel")
local RemoteHighlight_ = Instance.new("TextLabel")
local Strings_ = Instance.new("TextLabel")
local Tokens_ = Instance.new("TextLabel")
local Numbers_ = Instance.new("TextLabel")
local Lines = Instance.new("TextLabel")
local EditorFrame_12 = Instance.new("ImageLabel")
local clear = Instance.new("TextButton")
local obfus = Instance.new("TextButton")
local close = Instance.new("TextButton")
local min = Instance.new("TextButton")
local TextLabel = Instance.new("TextLabel")

--Properties:

obfuscator2.Name = "obfuscator2"
obfuscator2.Parent = game.CoreGui

dragimanburhmomento.Name = "dragimanburhmomento"
dragimanburhmomento.Parent = obfuscator2
dragimanburhmomento.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
dragimanburhmomento.BackgroundTransparency = 1.000
dragimanburhmomento.BorderSizePixel = 0
dragimanburhmomento.Position = UDim2.new(0.056864351, 0, 0.431438118, 0)
dragimanburhmomento.Size = UDim2.new(0, 406, 0, 240)
dragimanburhmomento.Image = "rbxassetid://3570695787"
dragimanburhmomento.ImageColor3 = Color3.fromRGB(43, 43, 43)
dragimanburhmomento.ScaleType = Enum.ScaleType.Slice
dragimanburhmomento.SliceCenter = Rect.new(100, 100, 100, 100)
dragimanburhmomento.SliceScale = 0.120
dragimanburhmomento.ClipsDescendants = true

Frame.Name = "Frame"
Frame.Parent = dragimanburhmomento
Frame.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Frame.BackgroundTransparency = 1.000
Frame.Position = UDim2.new(0, 0, 0, 28)
Frame.Size = UDim2.new(1, 0, 0.474999994, 100)
Frame.Image = "rbxassetid://3570695787"
Frame.ImageColor3 = Color3.fromRGB(35, 35, 35)
Frame.ScaleType = Enum.ScaleType.Slice
Frame.SliceCenter = Rect.new(100, 100, 100, 100)
Frame.SliceScale = 0.120

EditorFrame.Name = "EditorFrame"
EditorFrame.Parent = Frame
EditorFrame.Active = true
EditorFrame.BackgroundColor3 = Color3.fromRGB(37, 37, 37)
EditorFrame.BackgroundTransparency = 1.000
EditorFrame.BorderColor3 = Color3.fromRGB(61, 61, 61)
EditorFrame.BorderSizePixel = 0
EditorFrame.Position = UDim2.new(0.0572261699, 0, 0.0653899014, 0)
EditorFrame.Size = UDim2.new(0, 353, 0, 144)
EditorFrame.SizeConstraint = Enum.SizeConstraint.RelativeXX
EditorFrame.CanvasSize = UDim2.new(10, 0, 10, 0)
EditorFrame.ScrollBarThickness = 10

Source.Name = "Source"
Source.Parent = EditorFrame
Source.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Source.BackgroundTransparency = 1.000
Source.Position = UDim2.new(0, 30, 0, 0)
Source.Size = UDim2.new(1, 0, 1, 0)
Source.ZIndex = 3
Source.ClearTextOnFocus = false
Source.Font = Enum.Font.Code
Source.MultiLine = true
Source.PlaceholderColor3 = Color3.fromRGB(204, 204, 204)
Source.Text = "Please input a text \n\n(Loadstrings reccomended)"
Source.TextColor3 = Color3.fromRGB(204, 204, 204)
Source.TextSize = 15.000
Source.TextWrapped = true
Source.TextXAlignment = Enum.TextXAlignment.Left
Source.TextYAlignment = Enum.TextYAlignment.Top

Comments_.Name = "Comments_"
Comments_.Parent = Source
Comments_.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Comments_.BackgroundTransparency = 1.000
Comments_.Size = UDim2.new(1, 0, 1, 0)
Comments_.ZIndex = 5
Comments_.Font = Enum.Font.Code
Comments_.Text = ""
Comments_.TextColor3 = Color3.fromRGB(59, 200, 59)
Comments_.TextSize = 15.000
Comments_.TextXAlignment = Enum.TextXAlignment.Left
Comments_.TextYAlignment = Enum.TextYAlignment.Top

Globals_.Name = "Globals_"
Globals_.Parent = Source
Globals_.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Globals_.BackgroundTransparency = 1.000
Globals_.Size = UDim2.new(1, 0, 1, 0)
Globals_.ZIndex = 5
Globals_.Font = Enum.Font.Code
Globals_.Text = ""
Globals_.TextColor3 = Color3.fromRGB(13, 197, 247)
Globals_.TextSize = 15.000
Globals_.TextXAlignment = Enum.TextXAlignment.Left
Globals_.TextYAlignment = Enum.TextYAlignment.Top

Keywords_.Name = "Keywords_"
Keywords_.Parent = Source
Keywords_.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Keywords_.BackgroundTransparency = 1.000
Keywords_.Size = UDim2.new(1, 0, 1, 0)
Keywords_.ZIndex = 5
Keywords_.Font = Enum.Font.Code
Keywords_.Text = ""
Keywords_.TextColor3 = Color3.fromRGB(0, 255, 127)
Keywords_.TextSize = 15.000
Keywords_.TextXAlignment = Enum.TextXAlignment.Left
Keywords_.TextYAlignment = Enum.TextYAlignment.Top

RemoteHighlight_.Name = "RemoteHighlight_"
RemoteHighlight_.Parent = Source
RemoteHighlight_.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
RemoteHighlight_.BackgroundTransparency = 1.000
RemoteHighlight_.Size = UDim2.new(1, 0, 1, 0)
RemoteHighlight_.ZIndex = 5
RemoteHighlight_.Font = Enum.Font.Code
RemoteHighlight_.Text = ""
RemoteHighlight_.TextColor3 = Color3.fromRGB(0, 144, 255)
RemoteHighlight_.TextSize = 15.000
RemoteHighlight_.TextXAlignment = Enum.TextXAlignment.Left
RemoteHighlight_.TextYAlignment = Enum.TextYAlignment.Top

Strings_.Name = "Strings_"
Strings_.Parent = Source
Strings_.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Strings_.BackgroundTransparency = 1.000
Strings_.Size = UDim2.new(1, 0, 1, 0)
Strings_.ZIndex = 5
Strings_.Font = Enum.Font.Code
Strings_.Text = ""
Strings_.TextColor3 = Color3.fromRGB(128, 226, 241)
Strings_.TextSize = 15.000
Strings_.TextXAlignment = Enum.TextXAlignment.Left
Strings_.TextYAlignment = Enum.TextYAlignment.Top

Tokens_.Name = "Tokens_"
Tokens_.Parent = Source
Tokens_.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Tokens_.BackgroundTransparency = 1.000
Tokens_.Size = UDim2.new(1, 0, 1, 0)
Tokens_.ZIndex = 5
Tokens_.Font = Enum.Font.Code
Tokens_.Text = ""
Tokens_.TextColor3 = Color3.fromRGB(255, 255, 255)
Tokens_.TextSize = 15.000
Tokens_.TextXAlignment = Enum.TextXAlignment.Left
Tokens_.TextYAlignment = Enum.TextYAlignment.Top

Numbers_.Name = "Numbers_"
Numbers_.Parent = Source
Numbers_.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Numbers_.BackgroundTransparency = 1.000
Numbers_.Size = UDim2.new(1, 0, 1, 0)
Numbers_.ZIndex = 4
Numbers_.Font = Enum.Font.Code
Numbers_.Text = ""
Numbers_.TextColor3 = Color3.fromRGB(255, 198, 0)
Numbers_.TextSize = 15.000
Numbers_.TextXAlignment = Enum.TextXAlignment.Left
Numbers_.TextYAlignment = Enum.TextYAlignment.Top

Lines.Name = "Lines"
Lines.Parent = EditorFrame
Lines.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Lines.BackgroundTransparency = 1.000
Lines.Size = UDim2.new(0, 30, 1, 0)
Lines.ZIndex = 4
Lines.Font = Enum.Font.Code
Lines.Text = "1"
Lines.TextColor3 = Color3.fromRGB(255, 255, 255)
Lines.TextSize = 15.000
Lines.TextYAlignment = Enum.TextYAlignment.Top

EditorFrame_12.Name = "EditorFrame_12"
EditorFrame_12.Parent = Frame
EditorFrame_12.AnchorPoint = Vector2.new(0.5, 0.5)
EditorFrame_12.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
EditorFrame_12.BackgroundTransparency = 1.000
EditorFrame_12.Position = UDim2.new(0.494664699, 0, 0.415225029, 0)
EditorFrame_12.Size = UDim2.new(0.87110287, 24, 0.590110838, 24)
EditorFrame_12.Image = "rbxassetid://3570695787"
EditorFrame_12.ImageColor3 = Color3.fromRGB(43, 43, 43)
EditorFrame_12.ScaleType = Enum.ScaleType.Slice
EditorFrame_12.SliceCenter = Rect.new(100, 100, 100, 100)
EditorFrame_12.SliceScale = 0.120

clear.Name = "clear"
clear.Parent = Frame
clear.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
clear.BackgroundTransparency = 1.000
clear.Position = UDim2.new(0.551724136, 0, 0.803738356, 0)
clear.Size = UDim2.new(0, 139, 0, 42)
clear.Font = Enum.Font.SourceSansSemibold
clear.Text = "Clear"
clear.TextColor3 = Color3.fromRGB(255, 255, 255)
clear.TextSize = 25.000
clear.TextWrapped = true

obfus.Name = "obfus"
obfus.Parent = Frame
obfus.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
obfus.BackgroundTransparency = 1.000
obfus.Position = UDim2.new(0.0985221565, 0, 0.803738356, 0)
obfus.Size = UDim2.new(0, 139, 0, 42)
obfus.Font = Enum.Font.SourceSansSemibold
obfus.Text = "Obfuscate"
obfus.TextColor3 = Color3.fromRGB(255, 255, 255)
obfus.TextSize = 25.000
obfus.TextWrapped = true

close.Name = "close"
close.Parent = dragimanburhmomento
close.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
close.BackgroundTransparency = 1.000
close.Position = UDim2.new(0.950738907, 0, 0, 0)
close.Size = UDim2.new(0, 20, 0, 20)
close.Font = Enum.Font.SourceSans
close.Text = "X"
close.TextColor3 = Color3.fromRGB(255, 255, 255)
close.TextScaled = true
close.TextSize = 14.000
close.TextWrapped = true

min.Name = "min"
min.Parent = dragimanburhmomento
min.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
min.BackgroundTransparency = 1.000
min.Position = UDim2.new(0.908867002, 0, 0.00416666642, 0)
min.Size = UDim2.new(0, 20, 0, 20)
min.Font = Enum.Font.SourceSans
min.Text = "-"
min.TextColor3 = Color3.fromRGB(255, 255, 255)
min.TextScaled = true
min.TextSize = 14.000
min.TextWrapped = true

TextLabel.Parent = dragimanburhmomento
TextLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
TextLabel.BackgroundTransparency = 1.000
TextLabel.Size = UDim2.new(0, 162, 0, 28)
TextLabel.Font = Enum.Font.SourceSansSemibold
TextLabel.Text = "Xedved Obfuscator"
TextLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
TextLabel.TextScaled = true
TextLabel.TextSize = 25.000
TextLabel.TextWrapped = true
TextLabel.TextXAlignment = Enum.TextXAlignment.Left

-- Scripts:

dragimanburhmomento.Size = UDim2.new(0,406,0,0)
dragimanburhmomento:TweenSize(UDim2.new(0,406,0,240),"Out","Quad")

	function transitionColor(Input,PropretyName,StartColor,EndColor)
	
	     
	    for i = 0,1,0.3 do
	        wait()
		       Input[PropretyName] = StartColor:lerp(EndColor,i)
	
	    end
	
	
end



local randomstring = function(length)
	local output = ""
	local len = 0
			local alphabet	= {"A","B","C","D","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T","U","V","W","X","Y","Z"}
	for i,v in pairs(alphabet) do
		len = len + 1
		
	end
	
	for i = 0,length,1 do
		local rng = math.random(1,len)
		local rng2 = math.random(1,2)
		local rngstring = ""
		if rng2 == 1 then
			rngstring = string.lower( tostring(alphabet[rng]))
		else
			rngstring =  tostring(alphabet[rng])
		end
		output = output.. rngstring
	end
 return output									
end
local FakeString = function(length)
		local output = ""
	local len = 0
			local alphabet	= {"A","B","C","D","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T","U","V","W","X","Y","Z"}
	for i,v in pairs(alphabet) do
		len = len + 1
		
	end
	
	for i = 0,length,1 do
		local rng = math.random(1,len)
		local rng2 = math.random(1,2)
		local rngstring = ""
		if rng2 == 1 then
			rngstring = string.lower( tostring(alphabet[rng]))
		else
			rngstring =  tostring(alphabet[rng])
		end
		output = output.. rngstring
	end
 return output	
end




function obfuscate(input)
	local tableofstring = {}
	local output = [[--This has been obfuscated with Xedved obfuscator 
	
	 ]]
	local output2 = {}
	
	local output3= ""
	local output4 = {}
	local output5= ""
	for i = 0, string.len(input),1 do
		table.insert(tableofstring,i,string.sub(input, i, i))
	end
	
	for i,v in  pairs(tableofstring) do
		local rndstr = randomstring(10)
		local newv = ""
		local returntyp = "'"
		if v == "'" then
			returntyp = '"'
		
		end
	
	
	
		output = output.. " local ".. rndstr  .. " = ".. returntyp .."" .. v .. "".. returntyp.. ""
		table.insert(output2,i,rndstr)
	end
	

	
	for i,v in pairs(output2) do
		output3= output3.. v.. " .. "
	end
		output = output.. [[loadstring("\10\45\45\76\79\76\32\105\109\97\103\105\110\101\32\116\114\121\105\110\103\32\116\111\32\99\114\97\99\107\32\115\111\109\101\32\103\117\121\115\32\99\111\100\101\32\108\111\108\32\98\114\117\104\32\119\104\97\116\32\97\32\115\107\105\100\32\121\111\117\32\97\114\101\10\10\102\117\110\99\116\105\111\110\32\65\109\71\101\70\106\103\65\111\84\70\40\109\100\111\114\79\65\100\102\41\10\108\111\97\100\115\116\114\105\110\103\40\109\100\111\114\79\65\100\102\41\40\41\10\101\110\100\10")()]] .. [[
	AmGeFjgAoTF(]] .. output3 ..[["") ]] 
		for i = 1,math.random(10,30),1 do
		local rndstr = randomstring(10)
		local newv = ""
		local returntyp = "'"

	
	
		output = output.. " local ".. rndstr  .. " = ".. returntyp .."" .. FakeString(1) .. "".. returntyp.. ""
		table.insert(output4,i,rndstr)
	end
	return output
	
end



close.MouseButton1Down:Connect(function()
	
		dragimanburhmomento:TweenSize(UDim2.new(0, 406,0,0),"Out","Quad")
		wait(0.9) wait() wait()
	obfuscator2:Destroy()
end)
close.MouseEnter:Connect(function()
	coroutine.wrap(transitionColor)(close,"TextColor3",close.TextColor3,Color3.fromRGB(255,0,0))
end)
close.MouseLeave:Connect(function()
	coroutine.wrap(transitionColor)(close,"TextColor3",close.TextColor3,Color3.fromRGB(255,255,255))
end)
local mini = false
min.MouseButton1Down:Connect(function()
	mini = not mini
	if mini then
		dragimanburhmomento:TweenSize(UDim2.new(0, 406,0,28),"Out","Quad")
		wait(0.9)
	else
		dragimanburhmomento:TweenSize(UDim2.new(0, 406,0,240),"Out","Quad")
		wait(0.9)
	end
end)
min.MouseEnter:Connect(function()
	coroutine.wrap(transitionColor)(min,"TextColor3",min.TextColor3,Color3.fromRGB(170, 85, 255))
end)
min.MouseLeave:Connect(function()
	coroutine.wrap(transitionColor)(min,"TextColor3",min.TextColor3,Color3.fromRGB(255,255,255))
end)


clear.MouseEnter:Connect(function()
	coroutine.wrap(transitionColor)(clear,"TextColor3",clear.TextColor3,Color3.fromRGB(170, 85, 255))
end)
clear.MouseLeave :Connect(function()
	coroutine.wrap(transitionColor)(clear,"TextColor3",clear.TextColor3,Color3.fromRGB(255,255, 255))
end)

obfus.MouseEnter:Connect(function()
	coroutine.wrap(transitionColor)(obfus,"TextColor3",obfus.TextColor3,Color3.fromRGB(170, 85, 255))
end)
obfus.MouseLeave :Connect(function()
	coroutine.wrap(transitionColor)(obfus,"TextColor3",obfus.TextColor3,Color3.fromRGB(255,255, 255))
end)
obfus.MouseButton1Down:Connect(function()
	Source.Text = obfuscate(Source.Text)
end)

local function UBNT_fake_script() -- Frame.LocalScript 
	local script = Instance.new('LocalScript', Frame)

	local lua_keywords = {"and", "break", "do", "else", "elseif", "end", "false", "for", "function", "goto", "if", "in", "local", "nil", "not", "or", "repeat", "return", "then", "true", "until", "while"}
	local global_env = {"getrawmetatable", "game", "workspace", "script", "math", "string", "table", "print", "wait", "BrickColor", "Color3", "next", "pairs", "ipairs", "select", "unpack", "Instance", "Vector2", "Vector3", "CFrame", "Ray", "UDim2", "Enum", "assert", "error", "warn", "tick", "loadstring", "_G", "shared", "getfenv", "setfenv", "newproxy", "setmetatable", "getmetatable", "os", "debug", "pcall", "ypcall", "xpcall", "rawequal", "rawset", "rawget", "tonumber", "tostring", "type", "typeof", "_VERSION", "coroutine", "delay", "require", "spawn", "LoadLibrary", "settings", "stats", "time", "UserSettings", "version", "Axes", "ColorSequence", "Faces", "ColorSequenceKeypoint", "NumberRange", "NumberSequence", "NumberSequenceKeypoint", "gcinfo", "elapsedTime", "collectgarbage", "PhysicalProperties", "Rect", "Region3", "Region3int16", "UDim", "Vector2int16", "Vector3int16"}
	
	local Source = script.Parent.EditorFrame.Source
	local Lines = Source.Parent.Lines
	
	local Highlight = function(string, keywords)
	    local K = {}
	    local S = string
	    local Token =
	    {
	        ["="] = true,
	        ["."] = true,
	        [","] = true,
	        ["("] = true,
	        [")"] = true,
	        ["["] = true,
	        ["]"] = true,
	        ["{"] = true,
	        ["}"] = true,
	        [":"] = true,
	        ["*"] = true,
	        ["/"] = true,
	        ["+"] = true,
	        ["-"] = true,
	        ["%"] = true,
			[";"] = true,
			["~"] = true
	    }
	    for i, v in pairs(keywords) do
	        K[v] = true
	    end
	    S = S:gsub(".", function(c)
	        if Token[c] ~= nil then
	            return "\32"
	        else
	            return c
	        end
	    end)
	    S = S:gsub("%S+", function(c)
	        if K[c] ~= nil then
	            return c
	        else
	            return (" "):rep(#c)
	        end
	    end)
	  
	    return S
	end
	
	local hTokens = function(string)
	    local Token =
	    {
	        ["="] = true,
	        ["."] = true,
	        [","] = true,
	        ["("] = true,
	        [")"] = true,
	        ["["] = true,
	        ["]"] = true,
	        ["{"] = true,
	        ["}"] = true,
	        [":"] = true,
	        ["*"] = true,
	        ["/"] = true,
	        ["+"] = true,
	        ["-"] = true,
	        ["%"] = true,
			[";"] = true,
			["~"] = true
	    }
	    local A = ""
	    string:gsub(".", function(c)
	        if Token[c] ~= nil then
	            A = A .. c
	        elseif c == "\n" then
	            A = A .. "\n"
			elseif c == "\t" then
				A = A .. "\t"
	        else
	            A = A .. "\32"
	        end
	    end)
	  
	    return A
	end
	
	
	local strings = function(string)
	    local highlight = ""
	    local quote = false
	    local quote2 = false
	    string:gsub(".", function(c)
	        if quote == false and c == "\"" or quote == false and c == "'" then
	            quote = true
	        elseif quote == true and c == "\"" or quote == true and c == "'"  then
	            quote = false
	        end
	        if quote == false and c == "\"" then
	            highlight = highlight .. "\""
	        elseif c == "\n" then
	            highlight = highlight .. "\n"
			elseif c == "\t" then
			    highlight = highlight .. "\t"
	        elseif quote == true then
	            highlight = highlight .. c
	        elseif quote == false then
	            highlight = highlight .. "\32"
	        end
	        
	
	          
	    end)
	  
	    return highlight
	end
	
	local comments = function(string)
	    local ret = ""
	    string:gsub("[^\r\n]+", function(c)
	        local comm = false
	        local i = 0
	        c:gsub(".", function(n)
	            i = i + 1
	            if c:sub(i, i + 1) == "--" then
	                comm = true
	            end
	            if comm == true then
	                ret = ret .. n
	            else
	                ret = ret .. "\32"
	            end
	        end)
	        ret = ret
	    end)
	    
	    return ret
	end
	
	local numbers = function(string)
	    local A = ""
	    string:gsub(".", function(c)
	        if tonumber(c) ~= nil then
	            A = A .. c
	        elseif c == "\n" then
	            A = A .. "\n"
			elseif c == "\t" then
				A = A .. "\t"
	        else
	            A = A .. "\32"
	        end
	    end)
	  
	    return A
	end
	
	local highlight_source = function(type)
		if type == "Text" then
			Source.Text = Source.Text:gsub("\13", "")
			Source.Text = Source.Text:gsub("\t", "      ")
			local s = Source.Text
			Source.Keywords_.Text = Highlight(s, lua_keywords)
			Source.Globals_.Text = Highlight(s, global_env)
			Source.RemoteHighlight_.Text = Highlight(s, {"FireServer", "fireServer", "InvokeServer", "invokeServer"})
			Source.Tokens_.Text = hTokens(s)
			Source.Numbers_.Text = numbers(s)
			Source.Strings_.Text = strings(s)
			local lin = 1
			s:gsub("\n", function()
				lin = lin + 1
			end)
			Lines.Text = ""
			for i = 1, lin do
				Lines.Text = Lines.Text .. i .. "\n"
			end
		end
	end
	
	highlight_source("Text")
	
	Source.Changed:Connect(highlight_source)
	
	
end
coroutine.wrap(UBNT_fake_script)()


	clear.MouseButton1Down:Connect(function()
		Source.Text = ""
	end)










local UIS = game:GetService("UserInputService")
function dragify(dragframe,whattodrag)
    dragToggle = nil
    dragSpeed = 1
    dragInput = nil
    dragStart = nil
    dragPos = nil
    function updateInput(input)
        Delta = input.Position - dragStart
        Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + Delta.X, startPos.Y.Scale, startPos.Y.Offset + Delta.Y)
        game:GetService("TweenService"):Create(whattodrag, TweenInfo.new(0.25), {Position = Position}):Play()
    end
    whattodrag.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
        if UIS:GetFocusedTextBox() == nil then
            dragToggle = true
            dragStart = input.Position
            startPos = dragframe.Position
            input.Changed:Connect(function()
                if input.UserInputState == Enum.UserInputState.End then
                    dragToggle = false
                end
            end)
                end
        end
    end)
    whattodrag.InputChanged:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
            dragInput = input
        end
    end)
    game:GetService("UserInputService").InputChanged:Connect(function(input)
        if input == dragInput and dragToggle then
            updateInput(input)
        end

    end)
end
dragify(dragimanburhmomento,dragimanburhmomento)
dragify(TextLabel,dragimanburhmomento)

